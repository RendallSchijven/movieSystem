package moviesystem;

import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Rendall
 */
public class GraphView extends javax.swing.JFrame {

    /**
     * Creates new form movieGraph
     */
    public GraphView() {
        this.setTitle("Movies per country");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GraphView().setVisible(true);
        });
    }
    
    public void update(List<Movie> movies){
        createGraph(movies);
        this.invalidate();
        this.validate();
    }
             
    private void createGraph(List<Movie> movies)
    { 
        //Hier maak ik gebruik van een Abstract Factory pattern
        JFreeChart graph = ChartFactory.createBarChart("Movies per country", "Country", "Amount of movies", getData(movies), PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot grph = graph.getCategoryPlot();
        grph.setRangeGridlinePaint(Color.ORANGE);
        
        ChartPanel chartPanel = new ChartPanel( graph );        
        chartPanel.setPreferredSize(new java.awt.Dimension( 560 , 367 ) );        
        setContentPane( chartPanel );
    }

    private CategoryDataset getData(List<Movie> movies) {
        DefaultCategoryDataset data = new DefaultCategoryDataset();
        
        List<String> countries = new ArrayList<>();
        List<Integer> movieAmount = new ArrayList<>();
        
        for(int i = 0; i < movies.size(); i++){
            String country = movies.get(i).getCountry().toLowerCase().trim();
            
            if(countries.contains(country))
            {
                movieAmount.set(countries.indexOf(country), movieAmount.get(countries.indexOf(country)) + 1);
            }
            else{
                countries.add(country);
                movieAmount.add(1);
            }
        }
        
        for(int i = 0; i < countries.size(); i++){
            data.addValue(movieAmount.get(i), "Country", countries.get(i));
        }
        
        return data;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
